//Вывести названия двух произвольных треков с тегом new
db.tracks.aggregate([
    { $match: { tags: 'new' } }
    ,{ $sample: { size: 2 } }
    ,{ $project: { title: 1, _id: 0 } }
])


//Вывести имя юзера с самым минимальным балансом
db.users.aggregate([
    { $sort: { balance: 1 } }
    ,{ $sample: { size: 1 } }
    ,{ $project: { username: 1, _id: 0 } }
])


//Вывести имена юзеров, у которых есть треки
db.users.aggregate([
    { $lookup: {
            from: 'tracks', // название колл., откуда взять данные
            localField: '_id', // локальное поле
            foreignField: 'author_id', // внешнее поле
            as: 'tracks' // куда поместить результат
     }},
    { $match: {tracks: {$ne: []} }},
    { $project: {_id: 0, fullname: 1}}
])


//Используя метод aggregate(), вывести ко-во юзеров с балансом до 1000 EUR
db.users.aggregate(
    { $match: { balance: { $lt: 1000 } } },
    { $count: 'balance < 1000' }
)

//Также очень коротко опишите, как работает агрегация в MongoDB
/* 
Агрегация позволяет не только получать а и производить манипуля с данными.
Выполняется с помощью метода aggregate(), в который передается массив команд
отвечающих за обработку и вывод информации. Данные команды выполняются
последовательно, изменяя полученные данные и передавая их дальше. Т.е. процесс
выполняется поэтапно каждая команда отвечает за свой этап и выполняется четко
согласно структуре написанного кода.
*/